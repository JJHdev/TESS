<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!--
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# @Description : 관리자 - 평가사업관리 sql
# @author lsz
# @version 1.0 2018/11/26
# Used Table(주요) : TB_Evalu_BUSI     (관광사업정보)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<sqlMap namespace="Busi">

    <!-- ++++++++++++++++++++++++++++++++++++++
          공통 컬럼.
         ++++++++++++++++++++++++++++++++++++++ -->

    <!--  -->
    <sql id="EvaluMgmt-columns">
	     A.EVALU_BUSI_NO     as "evaluBusiNo"
	    ,A.EVALU_BUSI_NM     as "evaluBusiNm"
	    ,A.USCM_NO          as "usmcNo"
	    ,A.BUSI_POST_NO     as "busiPostNo"
	    ,A.BUSI_ADDR1       as "busiAddr1"
	    ,A.BUSI_ADDR2       as "busiAddr2"
	    ,A.BUSI_ADDR3       as "busiAddr3"
	    ,A.BUSI_ADDR4       as "busiAddr4"
	    ,A.BUSI_ADDR5       as "busiAddr5"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   as "busiAddr12"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 ||' '|| A.BUSI_ADDR3 ||' '|| A.BUSI_ADDR4 as "busiAddress1"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   as "cityauthNm"
	    ,A.BUSI_STT_DATE    as "busiSttDate"
	    ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate"
	    ,A.BUSI_END_DATE    as "busiEndDate"
	    ,FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate"
	    ,A.BUSI_DEV_ENTY	   as "busiDevEnty"
	    ,A.BUSI_PLAN_DATE   as "busiPlanDate"
	    ,FN_CONV_VDATEYM(A.BUSI_PLAN_DATE)                    as "convBusiPlanDate"
	    ,A.BUSI_TYPE        as "busiType"
	    ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_TYPE)             as "busiTypeNm"
	    ,A.BUSI_CATE        as "busiCate"
	    ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_CATE)             as "busiCateNm"                                                                 
	    ,A.TOT_SITE_AREA    as "totSiteArea"
	    ,A.TOT_SITE_AREA || NVL2(A.TOT_SITE_AREA, TOT_SITE_UNIT, '')   as "totSiteAreaUnit"
	    ,A.TOT_SITE_UNIT    as "totSiteUnit"
	    ,A.TOT_BUSI_EXPS    as "totBusiExps"
	    ,A.REGI_ID          as "regiId"
	    ,A.REGI_DATE        as "regiDate"
	    ,A.UPDT_ID          as "updtId"
	    ,A.UPDT_DATE        as "updtDate"
	    ,B.EVALU_STAGE		as "evaluStage"
	    ,(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm"
	    ,B.EVALU_GUBUN		as "evaluGubun"
    </sql>
    
    
    <sql id="TodeMgmt-columns">
             A.TODE_BUSI_NO     as "todeBusiNo"
            ,A.TODE_BUSI_NM     as "todeBusiNm"
            ,A.USCM_NO          as "uscmNo"
            ,A.REQ_USER_NM      as "reqUserNm"
            ,A.REQ_DEPT_NM      as "reqDeptNm"
            ,A.REQ_TEL_NO       as "reqTelNo"
            ,A.REQ_EMAIL        as "reqEmail"
            ,A.REQ_CITYAUTH_CD  as "reqCityauthCd"
            ,A.REQ_DATE         as "reqDate"
            ,FN_CONV_VDATEYM(A.REQ_DATE)                        as "convReqDate"
            ,A.BUSI_POST_NO     as "busiPostNo"
            ,A.BUSI_ADDR1       as "busiAddr1"
            ,A.BUSI_ADDR2       as "busiAddr2"
            ,A.BUSI_ADDR3       as "busiAddr3"
            ,A.BUSI_ADDR4       as "busiAddr4"
            ,A.BUSI_ADDR5       as "busiAddr5"
            ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   as "busiAddr12"
            ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 ||' '|| A.BUSI_ADDR3 ||' '|| A.BUSI_ADDR4 as "busiAddress1"
            ,A.BUSI_STT_DATE    as "busiSttDate"
            ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate"
            ,A.BUSI_END_DATE    as "busiEndDate"
            ,FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate"
            ,CEIL(MONTHS_BETWEEN(FN_FIX_DATE(A.BUSI_END_DATE, 'YYYYMMDD', 'N'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') ))
                                                                 as "devPeriod"
            ,CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_END_DATE, 'YYYYMMDD', 'N') ))
                                                                 as "mgtPeriod"
            ,CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') ))
                                                                 as "prcPeriod"
            ,(CASE WHEN CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') )) IS NULL 
                        OR CEIL(MONTHS_BETWEEN(FN_FIX_DATE(A.BUSI_END_DATE, 'YYYYMMDD', 'N'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') )) IS NULL
                        THEN NULL
                   WHEN CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') )) <![CDATA[<=]]> 0     THEN 0
                   WHEN CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') )) <![CDATA[>=]]> CEIL(MONTHS_BETWEEN(FN_FIX_DATE(A.BUSI_END_DATE, 'YYYYMMDD', 'N'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') )) THEN 100
                   ELSE ROUND(
                            CEIL(MONTHS_BETWEEN(TO_CHAR(SYSDATE, 'YYYYMMDD'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') ))/CEIL(MONTHS_BETWEEN(FN_FIX_DATE(A.BUSI_END_DATE, 'YYYYMMDD', 'N'), FN_FIX_DATE(A.BUSI_STT_DATE, 'YYYYMMDD', 'Y') ))*100
                            ,2)
                   END)         as "prcPeriodRate"
            ,A.BUSI_DEV_ENTY    as "busiDevEnty"
            ,A.BUSI_MGT_ENTY    as "busiMgtEnty"
            ,A.BUSI_LEGL_BASS   as "busiLeglBass"
            ,A.BUSI_PLAN_DATE   as "busiPlanDate"
            ,FN_CONV_VDATEYM(A.BUSI_PLAN_DATE)                   as "convBusiPlanDate"
            ,A.TOT_SITE_AREA    as "totSiteArea"
            ,A.TOT_FCLT_AREA    as "totFcltArea"
            ,A.GOV_DEPT_CD      as "govDeptCd"
            ,FN_GET_CODENM('GOV_DEPT_CD', A.GOV_DEPT_CD)         as "govDeptCdNm"
            ,A.BUSI_TYPE        as "busiType"
            ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_TYPE)             as "busiTypeNm"
            ,A.BUSI_CATE        as "busiCate"
            ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_CATE)             as "busiCateNm"
            ,A.BUSI_STAH_STAGE  as "busiStahStage"
            ,FN_GET_CODENM('BUSI_STAH_STAGE', A.BUSI_STAH_STAGE) as "busiStahStageNm"
            ,A.BUSI_NEED        as "busiNeed"
            ,A.BUSI_STAH_BACK   as "busiStahBack"
            ,A.BUSI_NOTE        as "busiNote"
            ,A.PLAN_GOV_EXPS    as "planGovExps"
            ,A.PLAN_CITY_EXPS   as "planCityExps"
            ,A.PLAN_DO_EXPS     as "planDoExps"
            ,A.PLAN_PRVT_EXPS   as "planPrvtExps"
            ,A.PLAN_AREA_SUM_EXPS as "planAreaSumExps"				<!-- 지방비 합계 항목 신규 추가 2015.01.19 -->
            ,NVL(A.PLAN_GOV_EXPS,0)+ <!--  NVL(A.PLAN_CITY_EXPS,0)+NVL(A.PLAN_DO_EXPS,0) --> NVL(A.PLAN_AREA_SUM_EXPS,0) +NVL(A.PLAN_PRVT_EXPS,0)
                                                                 as "planSumExps"	<!-- 합계 방식 변경 (지방비 합계 값으로 변경) 2015.01.19 -->
			,NVL(A.PLAN_GOV_EXPS,0)+NVL(A.PLAN_CITY_EXPS,0)+NVL(A.PLAN_DO_EXPS,0)+NVL(A.PLAN_PRVT_EXPS,0) as "planTotalExps"
            ,A.TOT_SITE_UNIT	as "totSiteUnit"		
            ,A.TOT_FCLT_UNIT   as "totFcltUnit"
            ,A.BUSI_ISSU_PBLM   as "busiIssuPblm"
            ,A.EFFE_POLI_EXPE   as "effePoliExpe"
            ,A.EFFE_PROD_INDU   as "effeProdIndu"
            ,A.EFFE_EMP_INDU    as "effeEmpIndu"
            ,A.PFMS_CREATE      as "pfmsCreate"
            ,A.OPEN_YN          as "openYn"
            ,A.TODE_BUSI_FIGURE_TYPE    as "busiFigureType"
            ,A.APPR_USER_ID     as "apprUserId"
            ,(SELECT USER_NM
                FROM VW_USER
               WHERE USER_ID = A.APPR_USER_ID)                   as "apprUserNm"
            ,A.APPR_DATE        as "apprDate"
            ,FN_CONV_VDATEYM(A.APPR_DATE)                       as "convApprDate"
            ,A.APPR_STAT        as "apprStat"
            ,FN_GET_CODENM('APPR_STAT', A.APPR_STAT)             as "apprStatNm"
            ,A.REF_BUSI_NO      as "refBusiNo"
            ,A.INPUT_RATE       as "inputRate"
            ,A.REGI_ID          as "regiId"
            ,A.REGI_DATE        as "regiDate"
            ,A.UPDT_ID          as "updtId"
            ,A.UPDT_DATE        as "updtDate"
            ,A.REJT_REASON      as "rejtReason"
            ,(SELECT MAX(ROLE_ID) FROM VW_USER WHERE USCM_NO = A.USCM_NO ) as "roleId"
            ,B.EVALU_STAGE		as "evaluStage"
	    	,(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm"
	    	,B.EVALU_GUBUN		as "evaluGubun"
    </sql>
    
    
    <!-- 기획평가사업  -->
    <sql id="PlanEvaluMgmt-columns">
	     A.PLANEVAL_BUSI_NO     	as "planEvalBusiNo"
	    ,A.PLANEVAL_BUSI_NAME     	as "planEvalBusiName"
	    ,A.BUSI_ADDR1       		as "busiAddr1"
	    ,A.BUSI_ADDR2       		as "busiAddr2"
	    ,A.BUSI_ADDR5       		as "busiAddr5"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   			as "busiAddr12"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 ||' '|| A.BUSI_ADDR5 		as "busiAddress1"
	    ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   			as "cityauthNm"
	    ,A.BUSI_STT_DATE    as "busiSttDate"
	    ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate"
	    ,A.BUSI_END_DATE    as "busiEndDate"
	    ,FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate"
	    ,A.BUSI_DEV_EVTY	   as "busiDevEnty"
	    ,A.BUSI_TYPE        as "busiType"
	    ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_TYPE)             as "busiTypeNm"
	    ,A.BUSI_CATE        as "busiCate"
	    ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_CATE)             as "busiCateNm"                                                                 
	    ,A.PLAN_BUSI_EXPS    as "planBusiExps"
	    ,A.REGI_ID          as "regiId"
	    ,A.REGI_DATE        as "regiDate"
	    ,A.UPDT_ID          as "updtId"
	    ,A.UPDT_DATE        as "updtDate"
    </sql>
    
    
    <!-- ++++++++++++++++++++++++++++++++++++++
          검색 관련
         ++++++++++++++++++++++++++++++++++++++ -->
    <sql id="EvaluMgmt-condition">
        <!-- 지역 -->
        <isNotEmpty property="srchBusiAddr1">
	        AND A.BUSI_ADDR1     = (SELECT CITYAUTH_NM
	                                FROM   TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr1#)
        </isNotEmpty>
        <isNotEmpty property="srchBusiAddr2">
	        AND A.BUSI_ADDR2     = (SELECT CITYAUTH_NM
	                                FROM   TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr2#)
     	</isNotEmpty>
		<!-- 사업코드 -->
		<isNotEmpty property="srchBusiCode">
			AND A.EVALU_BUSI_NO LIKE '%'||#srchBusiCode#||'%'
		</isNotEmpty>
        <!-- 사업구분 -->
        <isNotEmpty property="srchBusiType">
            AND A.BUSI_TYPE = #srchBusiType#
        </isNotEmpty>
        <!-- 사업유형 -->
        <isNotEmpty property="srchBusiCate">
            AND A.BUSI_CATE = #srchBusiCate#
        </isNotEmpty>
        <!-- 평가단계 -->
        <isNotEmpty property="srchBusiStage">
            AND B.EVALU_STAGE = #srchBusiStage#
        </isNotEmpty>
        <!-- 시작연도 -->
        <isNotEmpty property="srchBusiSttDate">
            AND TO_DATE(A.BUSI_STT_DATE, 'YYYYMMDD') >= #srchBusiSttDate# || '0101'
        </isNotEmpty>
		<!-- 종료연도 -->
		<isNotEmpty property="srchBusiEndDate">
			AND #srchBusiEndDate# >= TO_DATE(A.BUSI_END_DATE, 'YYYYMMDD') || '1231'
		</isNotEmpty>
        <!-- 사업명 -->
        <isNotEmpty property="srchEvaluBusiNm">
            AND A.Evalu_BUSI_NM LIKE '%'||#srchEvaluBusiNm#||'%'
        </isNotEmpty>
        <!-- 평가결과 -->
        <isNotEmpty property="srchFinalEvaluFnd">
            AND B.FINAL_EVALU_FND = #srchFinalEvaluFnd#
        </isNotEmpty>
        <!-- 시설면적 -->
        <isNotEmpty property="srchBusiArea">
            AND A.TOT_SITE_AREA <![CDATA[>=]]> #srchBusiArea# 
        </isNotEmpty>
        <!-- 사업금액 -->
        <isNotEmpty property="srchBusiExps">
            AND A.TOT_BUSI_EXPS <![CDATA[>=]]> #srchBusiExps#
        </isNotEmpty>
        <!-- 17년도 사업만 -->
        <isNotEmpty property="busi2017">
<!--             AND A.EVALU_BUSI_NO LIKE '%'||#busi2017#||'%' 테스트 DB는 cent_2017, 실제디비는 evalu_cent-->
            AND B.EVALU_BEFO_TRGT is null
        </isNotEmpty>
        <!-- 평가연도 -->
        <isNotEmpty property="srchEvaluGubun">
            AND B.EVALU_GUBUN = #srchEvaluGubun#
        </isNotEmpty>
    </sql>
    
    
    <sql id="TodeMgmt-condition">
        <!-- 지역 -->
        <isNotEmpty property="srchBusiAddr1">
	        AND A.BUSI_ADDR1     = (SELECT CITYAUTH_NM
	                                FROM   TREDSUSER.TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr1#)
        </isNotEmpty>
        <isNotEmpty property="srchBusiAddr2">
        	<isEqual property="srchBusiAddr2" compareValue="MAIN">
        		AND A.BUSI_ADDR2 is null
        	</isEqual>
        	<isNotEqual property="srchBusiAddr2" compareValue="MAIN">
		        AND A.BUSI_ADDR2     = (SELECT CITYAUTH_NM
	                                FROM   TREDSUSER.TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr2#)
        	</isNotEqual>
     	</isNotEmpty>
     	<!-- 사업코드 -->
		<isNotEmpty property="srchBusiCode">
			AND A.TODE_BUSI_NO LIKE '%'||#srchBusiCode#||'%'
		</isNotEmpty>
        <!-- 사업구분 -->
        <isNotEmpty property="srchBusiType">
            AND A.BUSI_TYPE = #srchBusiType#
        </isNotEmpty>
        <!-- 사업유형 -->
        <isNotEmpty property="srchBusiCate">
            AND A.BUSI_CATE = #srchBusiCate#
        </isNotEmpty>
        <!-- 사업명 -->
        <!-- <isNotEmpty property="srchTodeBusiNm">
            AND A.TODE_BUSI_NM LIKE '%'||#srchTodeBusiNm#||'%'
        </isNotEmpty> -->
        
        <!-- 사업명 -->
        <isNotEmpty property="srchTodeBusiNm">
            <!-- AND ( A.TODE_BUSI_NM LIKE '%'||#srchTodeBusiNm#||'%' OR  REPLACE(A.TODE_BUSI_NM,' ','') LIKE '%'||#srchTodeBusiNm#||'%' ) -->
            AND ( A.EVALU_BUSI_NM LIKE '%'||#srchTodeBusiNm#||'%' OR  REPLACE(A.EVALU_BUSI_NM,' ','') LIKE '%'||#srchTodeBusiNm#||'%'
			OR  A.EVALU_BUSI_NM LIKE '%'||REPLACE(#srchTodeBusiNm#,' ','')||'%' 
			OR  REPLACE(A.EVALU_BUSI_NM,' ','') LIKE '%'||REPLACE(#srchTodeBusiNm#,' ','')||'%' )
        </isNotEmpty>
        <!-- 평가단계 -->
        <isNotEmpty property="srchBusiStage">
            AND B.EVALU_STAGE = #srchBusiStage#
        </isNotEmpty>
        <!-- 평가연도 -->
        <isNotEmpty property="srchEvaluGubun">
            AND B.EVALU_GUBUN = #srchEvaluGubun#
        </isNotEmpty>
        <!-- 시작연도 -->
        <isNotEmpty property="srchBusiSttDate">
            AND #srchBusiSttDate# &lt;= SUBSTR(A.BUSI_STT_DATE, 0, 4)
        </isNotEmpty>
		<!-- 종료연도 -->
		<isNotEmpty property="srchBusiEndDate">
			AND #srchBusiEndDate# &gt;= SUBSTR(A.BUSI_END_DATE, 0, 4)  
		</isNotEmpty>
        
        <isNotEmpty property="srchApprStat">
            AND A.APPR_STAT = #srchApprStat#
        </isNotEmpty>
        <!-- 연도 -->
        <!-- <isNotEmpty property="srchBusiExpsYear">
        	AND SUBSTR(BUSI_STT_DATE, 0, 4) = #srchBusiExpsYear#
        	AND SUBSTR(BUSI_STT_DATE, 0, 4) &lt;= #srchBusiExpsYear#
	        AND SUBSTR(BUSI_END_DATE, 0, 4) &gt;= #srchBusiExpsYear#
	        AND A.TODE_BUSI_NO IN (SELECT DISTINCT TODE_BUSI_NO FROM TB_TODE_BUSIEXPS WHERE BUSI_EXPS_YEAR = #srchBusiExpsYear#)
        </isNotEmpty> -->
        <!-- 관리자가 지자체 사업과 동일 하게 보기위함 -->
        <isNotEmpty property="uscmNo">
            AND A.USCM_NO = #uscmNo#
        </isNotEmpty>
        <!-- 조회 메뉴일 때 -->
        <isEqual property="menuFg" compareValue="menuSrch">
            AND A.APPR_STAT = 'AS90'
            AND A.OPEN_YN = 'Y'
        </isEqual>
        <!-- 조회 메뉴가 아닐 때(관리메뉴) 권한별 조회 조건 설정. -->
        <isNotEqual property="menuFg" compareValue="menuSrch">
        
            <!-- ================================ -->
            <!-- 로그인 권한별로 리스트 대상 제한 -->
            <!-- ================================ -->
            <!-- 로그인된 사용자 -->
            <isNotEmpty property="gsRoleId">
            	
            	<isEqual property="gsRoleId" compareValue="ROLE_SIGG">
                    AND (B.EVALU_BUSI_NO, B.EVALU_STAGE, B.EVALU_GUBUN) 
                		IN (select EVALU_BUSI_NO, EVALU_STAGE, EVALU_GUBUN 
                    	from TB_EVALU_DESTI_BUSI_COMMIT 
                    	where USER_ID = #gsUserId#)
                </isEqual>
            
            
                <!-- 시군구 사용자일 때 : 자신의 data만 -->
                <!-- <isEqual property="gsRoleId" compareValue="ROLE_SIGG">
                    AND U.USCM_NO = #gsUscmNo#
                </isEqual>
                시도 사용자일 때 : 자기지역 산하 시군구의 data 만(임시저장/보완은 제외)
                <isEqual property="gsRoleId" compareValue="ROLE_SIDO">
                    AND U.CITYAUTH_CD LIKE SUBSTR(#gsCityauthCd#, 1,2)||'%'
                    AND ( A.APPR_STAT NOT IN ('AS00', 'AS80')
                          OR ( A.APPR_STAT IN ('AS00', 'AS80')
                               AND U.USCM_NO = #gsUscmNo#
                             )
                        )
                </isEqual>
                문체부일 때 : '임시저장'을 제외한 모든것
                <isEqual property="gsRoleId" compareValue="ROLE_AUTH_E1">
                    AND A.APPR_STAT NOT IN ('AS00')
                </isEqual>
                문광연일 때 : 승인완료된 모든 것
                <isEqual property="gsRoleId" compareValue="ROLE_AUTH_E2">
                    AND A.APPR_STAT = 'AS90'
                    AND A.OPEN_YN = 'Y'
                </isEqual>
                일반사용자일 때 : 승인완료된 모든 것
                <isEqual property="gsRoleId" compareValue="ROLE_USER">
                    AND A.APPR_STAT = 'AS90'
                    AND A.OPEN_YN = 'Y'
                </isEqual>
                민간투자자일 때 : 승인완료된 모든 것
                <isEqual property="gsRoleId" compareValue="ROLE_COMP">
                    AND A.APPR_STAT = 'AS90'
                    AND A.OPEN_YN = 'Y'
                </isEqual> -->
                <!-- 그 외 (관리자)는 전체  -->
            </isNotEmpty>
            <!-- 로그인되지 않은 사용자 : 승인완료된 모든 것 -->
            <isEmpty property="gsRoleId">
                AND A.APPR_STAT = 'AS90'
                AND A.OPEN_YN = 'Y'
            </isEmpty>
            
        </isNotEqual>
        
    </sql>
    
    
    
    <sql id="PlanEvaluMgmt-condition">
        <!-- 지역 -->
        <isNotEmpty property="srchBusiAddr1">
	        AND A.BUSI_ADDR1     = (SELECT CITYAUTH_NM
	                                FROM   TREDSUSER.TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr1#)
        </isNotEmpty>
        <isNotEmpty property="srchBusiAddr2">
        	<isEqual property="srchBusiAddr2" compareValue="MAIN">
        		AND A.BUSI_ADDR2 is null
        	</isEqual>
        	<isNotEqual property="srchBusiAddr2" compareValue="MAIN">
		        AND A.BUSI_ADDR2     = (SELECT CITYAUTH_NM
	                                FROM   TREDSUSER.TB_CITYAUTH
	                                WHERE  CITYAUTH_CD = #srchBusiAddr2#)
        	</isNotEqual>
     	</isNotEmpty>
     	<!-- 사업코드 -->
		<isNotEmpty property="srchBusiCode">
			AND A.PLANEVAL_BUSI_NO LIKE '%'||#srchBusiCode#||'%'
		</isNotEmpty>
        <!-- 사업구분 -->
        <isNotEmpty property="srchBusiType">
            AND A.BUSI_TYPE = #srchBusiType#
        </isNotEmpty>
        <!-- 사업유형 -->
        <isNotEmpty property="srchBusiCate">
            AND A.BUSI_CATE = #srchBusiCate#
        </isNotEmpty>
        <!-- 사업명 -->
        <!-- <isNotEmpty property="srchTodeBusiNm">
            AND A.TODE_BUSI_NM LIKE '%'||#srchTodeBusiNm#||'%'
        </isNotEmpty> -->
        
        <!-- 사업명 -->
        <isNotEmpty property="srchTodeBusiNm">
            <!-- AND ( A.TODE_BUSI_NM LIKE '%'||#srchTodeBusiNm#||'%' OR  REPLACE(A.TODE_BUSI_NM,' ','') LIKE '%'||#srchTodeBusiNm#||'%' ) -->
            AND ( A.PLANEVAL_BUSI_NAME LIKE '%'||#srchTodeBusiNm#||'%' OR  REPLACE(A.PLANEVAL_BUSI_NAME,' ','') LIKE '%'||#srchTodeBusiNm#||'%'
			OR  A.PLANEVAL_BUSI_NAME LIKE '%'||REPLACE(#srchTodeBusiNm#,' ','')||'%' 
			OR  REPLACE(A.PLANEVAL_BUSI_NAME,' ','') LIKE '%'||REPLACE(#srchTodeBusiNm#,' ','')||'%' )
        </isNotEmpty>
        <!-- 평가단계 -->
        <isNotEmpty property="srchBusiStage">
            AND B.EVALU_STAGE = #srchBusiStage#
        </isNotEmpty>
        <!-- 평가연도 -->
        <isNotEmpty property="srchEvaluGubun">
            AND B.EVALU_GUBUN = #srchEvaluGubun#
        </isNotEmpty>
        <!-- 시작연도 -->
        <isNotEmpty property="srchBusiSttDate">
            AND #srchBusiSttDate# &lt;= SUBSTR(A.BUSI_STT_DATE, 0, 4)
        </isNotEmpty>
		<!-- 종료연도 -->
		<isNotEmpty property="srchBusiEndDate">
			AND #srchBusiEndDate# &gt;= SUBSTR(A.BUSI_END_DATE, 0, 4)  
		</isNotEmpty>
        
        <isNotEmpty property="srchApprStat">
            AND A.APPR_STAT = #srchApprStat#
        </isNotEmpty>
        <!-- 연도 -->
        <!-- <isNotEmpty property="srchBusiExpsYear">
        	AND SUBSTR(BUSI_STT_DATE, 0, 4) = #srchBusiExpsYear#
        	AND SUBSTR(BUSI_STT_DATE, 0, 4) &lt;= #srchBusiExpsYear#
	        AND SUBSTR(BUSI_END_DATE, 0, 4) &gt;= #srchBusiExpsYear#
	        AND A.TODE_BUSI_NO IN (SELECT DISTINCT TODE_BUSI_NO FROM TB_TODE_BUSIEXPS WHERE BUSI_EXPS_YEAR = #srchBusiExpsYear#)
        </isNotEmpty> -->
    </sql>
    
    

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++
          TB_Evalu_BUSI     (관광사업정보) 작업
         +++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<!-- <select id="listEvaluBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				<include refid="TodeMgmt-columns"/>
				 ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)||'~'||FN_CONV_VDATEYM(A.BUSI_END_DATE) as "convBusiPeriod"
         FROM TREDSUSER.TB_TODE_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.TODE_BUSI_NO = B.EVALU_BUSI_NO
         AND B.EVALU_FINAL_YN != 'Y'
           <include refid="TodeMgmt-condition"/>
         ORDER BY A.TODE_BUSI_NM
    </select> -->
    
    <!-- <select id="listEvaluBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				A.TODE_BUSI_NO     as "todeBusiNo",
            	A.TODE_BUSI_NM     as "todeBusiNm",
				B.EVALU_STAGE		as "evaluStage",
	    		B.EVALU_GUBUN		as "evaluGubun",
				A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 as "busiAddr12",
				(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm",
				NVL(A.PLAN_GOV_EXPS,0)+NVL(A.PLAN_CITY_EXPS,0)+NVL(A.PLAN_DO_EXPS,0)+NVL(A.PLAN_PRVT_EXPS,0) as "planTotalExps",
				FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate",
            	FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate"
         FROM TREDSUSER.TB_TODE_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.TODE_BUSI_NO = B.EVALU_BUSI_NO
         AND B.EVALU_FINAL_YN != 'Y'
         AND B.EVALU_GUBUN = 2019
           <include refid="TodeMgmt-condition"/>
         ORDER BY A.TODE_BUSI_NM
    </select> -->
    
    <select id="listEvaluBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				A.PLANEVAL_BUSI_NO		as "todeBusiNo",
            	A.PLANEVAL_BUSI_NAME    as "todeBusiNm",
				B.EVALU_STAGE			as "evaluStage",
	    		B.EVALU_GUBUN			as "evaluGubun",
				A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 as "busiAddr12",
				(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm",
				A.PLAN_BUSI_EXPS 		as "planTotalExps",
				FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate",
            	FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate",
            	(select CODE_NM from SYS_CODE where CODE = A.BUSI_TYPE) as "busiTypeNm",
            	(select CODE_NM from SYS_CODE where CODE = A.BUSI_CATE) as "busiCateNm",
            	(
            		SELECT 	LISTAGG(tu.USER_NM, ',') WITHIN GROUP(ORDER BY tu.USER_NM)
                	FROM	TREDSUSER.TB_USER tu, TB_EVALU_DESTI_BUSI_COMMIT bc 
                	WHERE 	tu.USER_ID = bc.USER_ID 
                	AND 	bc.EVALU_BUSI_NO = B.EVALU_BUSI_NO
                	AND 	bc.EVALU_STAGE = B.EVALU_STAGE
                	AND 	bc.EVALU_GUBUN = B.EVALU_GUBUN
                ) as "commitList",
                B.EVALU_FINAL_YN		as "evaluFinalYn"
         FROM TREDSUSER.TB_PLANEVAL_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.PLANEVAL_BUSI_NO = B.EVALU_BUSI_NO
         <!-- AND B.EVALU_FINAL_YN != 'Y' -->
         AND B.EVALU_GUBUN = 2019
         
         <isNotEmpty property="srchEvaluCommitNm">
         	AND (
                B.EVALU_STAGE in (select EVALU_STAGE from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%') AND
                B.EVALU_GUBUN in (select EVALU_GUBUN from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%') AND
                B.EVALU_BUSI_NO in (select EVALU_BUSI_NO from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%')
            )
         </isNotEmpty>
         
           <include refid="PlanEvaluMgmt-condition"/>
         ORDER BY A.PLANEVAL_BUSI_NAME
    </select>
    
    <select id="listEvaluBusiCount" parameterClass="map"  resultClass="int">
    	SELECT count(*)
    	FROM TREDSUSER.TB_PLANEVAL_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
    	WHERE (0=0)
    	AND A.PLANEVAL_BUSI_NO = B.EVALU_BUSI_NO
        <!-- AND B.EVALU_FINAL_YN != 'Y' -->
        AND B.EVALU_GUBUN = 2019
        
        <isNotEmpty property="srchEvaluCommitNm">
         	AND (
                B.EVALU_STAGE in (select EVALU_STAGE from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%') AND
                B.EVALU_GUBUN in (select EVALU_GUBUN from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%') AND
                B.EVALU_BUSI_NO in (select EVALU_BUSI_NO from TB_EVALU_DESTI_BUSI_COMMIT a, TREDSUSER.TB_USER b where a.USER_ID = b.USER_ID and a.USE_YN = 'Y' and b.USER_NM like '%'||#srchEvaluCommitNm#||'%')
            )
         </isNotEmpty>
        
        	<include refid="PlanEvaluMgmt-condition"/>
    </select>
    
    <!-- <select id="listEvaluEndBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				<include refid="TodeMgmt-columns"/>
				 ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)||'~'||FN_CONV_VDATEYM(A.BUSI_END_DATE)
                                                                 as "convBusiPeriod"
         FROM TREDSUSER.TB_TODE_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.TODE_BUSI_NO = B.EVALU_BUSI_NO
         AND B.EVALU_FINAL_YN = 'Y'
           <include refid="TodeMgmt-condition"/>
         ORDER BY A.TODE_BUSI_NM
    </select> -->
    
    <!-- <select id="listEvaluEndBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				A.TODE_BUSI_NO     as "todeBusiNo",
            	A.TODE_BUSI_NM     as "todeBusiNm",
				B.EVALU_STAGE		as "evaluStage",
	    		B.EVALU_GUBUN		as "evaluGubun",
				A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 as "busiAddr12",
				(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm",
				NVL(A.PLAN_GOV_EXPS,0)+NVL(A.PLAN_CITY_EXPS,0)+NVL(A.PLAN_DO_EXPS,0)+NVL(A.PLAN_PRVT_EXPS,0) as "planTotalExps",
				FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate",
            	FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate",
            	(
            		SELECT 	LISTAGG(tu.USER_NM, ',') WITHIN GROUP(ORDER BY tu.USER_NM)
                	FROM	TREDSUSER.TB_USER tu, TB_EVALU_DESTI_BUSI_COMMIT bc 
                	WHERE 	tu.USER_ID = bc.USER_ID 
                	AND 	bc.EVALU_BUSI_NO = B.EVALU_BUSI_NO
                	AND 	bc.EVALU_STAGE = B.EVALU_STAGE
                	AND 	bc.EVALU_GUBUN = B.EVALU_GUBUN
                ) as "commitList"
         FROM TREDSUSER.TB_TODE_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.TODE_BUSI_NO = B.EVALU_BUSI_NO
         AND B.EVALU_FINAL_YN = 'Y'
           <include refid="TodeMgmt-condition"/>
         ORDER BY A.TODE_BUSI_NM
    </select>
    
    <select id="listEvaluEndBusiCount" parameterClass="map"  resultClass="int">
    	SELECT count(*)
    	FROM TREDSUSER.TB_TODE_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
    	WHERE (0=0)
    	AND A.TODE_BUSI_NO = B.EVALU_BUSI_NO
        AND B.EVALU_FINAL_YN = 'Y'
        	<include refid="TodeMgmt-condition"/>
    </select> -->
    
    <select id="listEvaluEndBusi" parameterClass="map"  resultClass="hashmap">
        SELECT
				A.PLANEVAL_BUSI_NO     	as "todeBusiNo",
            	A.PLANEVAL_BUSI_NAME    as "todeBusiNm",
				B.EVALU_STAGE			as "evaluStage",
	    		B.EVALU_GUBUN			as "evaluGubun",
				A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2 as "busiAddr12",
				(select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm",
				A.PLAN_BUSI_EXPS 		as "planTotalExps",
				FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate",
            	FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate",
            	(select CODE_NM from SYS_CODE where CODE = A.BUSI_TYPE) as "busiTypeNm",
            	(select CODE_NM from SYS_CODE where CODE = A.BUSI_CATE) as "busiCateNm",
            	(
            		SELECT 	LISTAGG(tu.USER_NM, ',') WITHIN GROUP(ORDER BY tu.USER_NM)
                	FROM	TREDSUSER.TB_USER tu, TB_EVALU_DESTI_BUSI_COMMIT bc 
                	WHERE 	tu.USER_ID = bc.USER_ID 
                	AND 	bc.EVALU_BUSI_NO = B.EVALU_BUSI_NO
                	AND 	bc.EVALU_STAGE = B.EVALU_STAGE
                	AND 	bc.EVALU_GUBUN = B.EVALU_GUBUN
                ) as "commitList",
                B.EVALU_FINAL_YN		as "evaluFinalYn"
         FROM TREDSUSER.TB_PLANEVAL_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
         WHERE (0=0)
         AND A.PLANEVAL_BUSI_NO = B.EVALU_BUSI_NO
         AND B.EVALU_FINAL_YN = 'Y'
         <isNotEmpty property="srchEvaluCommit">
         	AND (
                B.EVALU_STAGE in (select EVALU_STAGE from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#) AND
                B.EVALU_GUBUN in (select EVALU_GUBUN from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#) AND
                B.EVALU_BUSI_NO in (select EVALU_BUSI_NO from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#)
            )
         </isNotEmpty>
         
         <include refid="PlanEvaluMgmt-condition"/>
         ORDER BY A.PLANEVAL_BUSI_NAME
    </select>
    
    <select id="listEvaluEndBusiCount" parameterClass="map"  resultClass="int">
    	SELECT count(*)
    	FROM TREDSUSER.TB_PLANEVAL_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
    	WHERE (0=0)
    	AND A.PLANEVAL_BUSI_NO = B.EVALU_BUSI_NO
        AND B.EVALU_FINAL_YN = 'Y'
       	<isNotEmpty property="srchEvaluCommit">
         	AND (
                B.EVALU_STAGE in (select EVALU_STAGE from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#) AND
                B.EVALU_GUBUN in (select EVALU_GUBUN from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#) AND
                B.EVALU_BUSI_NO in (select EVALU_BUSI_NO from TB_EVALU_DESTI_BUSI_COMMIT where USE_YN = 'Y' and USER_ID = #srchEvaluCommit#)
            )
        </isNotEmpty>
       	<include refid="PlanEvaluMgmt-condition"/>
    </select>
    
    <!-- <select id="listEvaluEndBusi" parameterClass="map"  resultClass="hashmap">
    	SELECT
             A.EVALU_BUSI_NO     as "todeBusiNo"
            ,A.EVALU_BUSI_NM     as "todeBusiNm"
            ,A.BUSI_POST_NO     as "busiPostNo"
            ,A.BUSI_ADDR1       as "busiAddr1"
            ,A.BUSI_ADDR2       as "busiAddr2"
            ,A.BUSI_ADDR3       as "busiAddr3"
            ,A.BUSI_ADDR4       as "busiAddr4"
            ,A.BUSI_ADDR5       as "busiAddr5"
            ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   as "busiAddr12"
            ,A.BUSI_ADDR1 ||' '|| A.BUSI_ADDR2                   as "cityauthNm"
            ,A.BUSI_STT_DATE    as "busiSttDate"
            ,A.BUSI_END_DATE    as "busiEndDate"
            ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)                    as "convBusiSttDate"
            ,FN_CONV_VDATEYM(A.BUSI_END_DATE)                    as "convBusiEndDate"
            ,FN_CONV_VDATEYM(A.BUSI_STT_DATE)||'~'||FN_CONV_VDATEYM(A.BUSI_END_DATE)  as "convBusiPeriod"
            ,A.BUSI_TYPE        as "busiType"
            ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_TYPE)             as "busiTypeNm"
            ,A.BUSI_CATE        as "busiCate"
            ,FN_GET_CODENM('BUSI_TYPE', A.BUSI_CATE)             as "busiCateNm"                                                                 
            ,A.TOT_SITE_AREA || NVL2(A.TOT_SITE_AREA, TOT_SITE_UNIT, '')   as "totSiteArea"
            ,A.TOT_BUSI_EXPS as "planTotalExps"
            ,trunc(A.TOT_BUSI_EXPS/1000000) as "planTotalExps"
            ,B.EVALU_STAGE  as "evaluStage"
            ,B.EVALU_GUBUN  as "evaluGubun"
            ,(SELECT EVALU_INDICAT_NM FROM TB_EVALU_INDICAT WHERE EVALU_INDICAT_CD = B.EVALU_STAGE) as "evaluStageNm"
            ,B.EVALU_DATE as "evaluDate"
            ,FN_CONV_VDATEYM(TO_CHAR(TO_DATE(B.EVALU_DATE, 'YY-MM-DD'), 'YYYYMMDD')	) as "convEvaluDate"
            ,B.FINAL_EVALU_FND as "finalEvaluFnd"
            ,DECODE(B.FINAL_EVALU_FND, 'P', '적합', 'C', '조건부적합', 'F', '부적합', 'R', '재검토') as "convFinalEvaluFnd"
            ,(
            		SELECT 	LISTAGG(tu.USER_NM, ',') WITHIN GROUP(ORDER BY tu.USER_NM)
                	FROM	TREDSUSER.TB_USER tu, TB_EVALU_DESTI_BUSI_COMMIT bc 
                	WHERE 	tu.USER_ID = bc.USER_ID 
                	AND 	bc.EVALU_BUSI_NO = B.EVALU_BUSI_NO
                	AND 	bc.EVALU_STAGE = B.EVALU_STAGE
                	AND 	bc.EVALU_GUBUN = B.EVALU_GUBUN
            ) as "commitList"  
          FROM TB_EVALU_DESTI_BUSI_INFO A LEFT OUTER JOIN TB_EVALU_DESTI_BUSI_STAGE B
          FROM TB_EVALU_DESTI_BUSI_STAGE B LEFT OUTER JOIN TB_EVALU_DESTI_BUSI_INFO A
          ON A.EVALU_BUSI_NO = B.EVALU_BUSI_NO
         WHERE (0=0)
         	AND B.EVALU_GUBUN <![CDATA[ < ]]> 2019
         <isNotEmpty property="evaluStage">
         	AND B.EVALU_STAGE = #evaluStage# 
         </isNotEmpty>
         <include refid="EvaluMgmt-condition"/>  
    </select>
    
    <select id="listEvaluEndBusiCount" parameterClass="map"  resultClass="int">
    	SELECT count(*)   
          FROM TB_EVALU_DESTI_BUSI_INFO A LEFT OUTER JOIN TB_EVALU_DESTI_BUSI_STAGE B
          FROM TB_EVALU_DESTI_BUSI_STAGE B LEFT OUTER JOIN TB_EVALU_DESTI_BUSI_INFO A
          ON A.EVALU_BUSI_NO = B.EVALU_BUSI_NO
         WHERE (0=0)
         	AND B.EVALU_GUBUN <![CDATA[ < ]]> 2019
         <isNotEmpty property="evaluStage">
         	AND B.EVALU_STAGE = #evaluStage# 
         </isNotEmpty>
         <include refid="EvaluMgmt-condition"/> 
    </select> -->
    
    
    <!-- 평가완료사업 정보 -->
    <select id="viewEvaluEndBusiInfo" parameterClass="map"  resultClass="hashmap">
    	SELECT
    			<include refid="PlanEvaluMgmt-columns"/>
    	FROM TREDSUSER.TB_PLANEVAL_BUSI A, TB_EVALU_DESTI_BUSI_STAGE B
    	WHERE 	A.PLANEVAL_BUSI_NO = #evaluBusiNo#
    	AND 	A.PLANEVAL_BUSI_NO = B.EVALU_BUSI_NO
    </select>
    
    <!-- 2019 평가사업 상세 정보 -->
    <select id="viewEvaluBusiInfo" parameterClass="map"  resultClass="hashmap">
    	SELECT
    			<include refid="EvaluMgmt-columns"/>
    	FROM TB_EVALU_DESTI_BUSI_INFO A, TB_EVALU_DESTI_BUSI_STAGE B
    	WHERE 	A.EVALU_BUSI_NO = #evaluBusiNo#
    	AND 	A.EVALU_BUSI_NO = B.EVALU_BUSI_NO
    	AND 	A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가이력 조회 -->
    <select id="listEvaluBusiHist" parameterClass="map"  resultClass="hashmap">
        SELECT 
        		EVALU_BUSI_NO,
		        EVALU_STAGE,
		        (select EVALU_INDICAT_NM from TB_EVALU_INDICAT where EVALU_INDICAT_CD = A.EVALU_STAGE) as EVALU_STAGE_NM,
		        EVALU_GUBUN,
		        EVALU_PLAN_YN,
		        EVALU_GUIDE_YN,
		        EVALU_FINAL_YN,
		        REGI_DATE
        FROM TB_EVALU_DESTI_BUSI_STAGE A
        WHERE (0=0)
        AND	EVALU_BUSI_NO = #evaluBusiNo#
        ORDER BY REGI_DATE desc
    </select>
    
    <!-- 평가위원 평가진행현황 -->
    <select id="viewEvaluCommitStatus" parameterClass="map" resultClass="hashmap">
    	SELECT	AGREE_YN, 
    			REVIEW_YN, 
    			OPINION_YN,
    			AGREE_DATE,
    			REVIEW_APV_YN,
    			OPINION_APV_YN,
    			REVIEW_APV_DATE,
    			OPINION_APV_DATE,
    			OPINION_NOTE,
    			OPINION_NOTE_DATE,
    			OPINION_FND,
    			IPM_NOTE,
    			IPM_NOTE_DATE
		FROM 	TB_EVALU_DESTI_BUSI_COMMIT
		WHERE	EVALU_BUSI_NO = #evaluBusiNo#
		AND		EVALU_STAGE = #evaluStage#
		AND		EVALU_GUBUN = #evaluGubun#
		AND		USER_ID = #gsUserId#
    </select>
    
    <!-- 평가위원 이용동의서 상태 변경 -->
    <update id="updtEvaluCommitAgree" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		AGREE_YN = #agreeYn#,
    			AGREE_DATE = sysdate
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 서먼검토서 상태 변경 -->
    <update id="updtEvaluCommitReview" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		REVIEW_YN = #reviewYn#
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 평가의견서 상태 변경 -->
    <update id="updtEvaluCommitOpinion" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		OPINION_YN = #opinionYn#,
    			OPINION_FND = #opinionFnd#
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가사업정보 첨부파일 조회 -->
    <select id="listEvaluBusiAtthFile" parameterClass="map"  resultClass="hashmap">
    	SELECT  A.CODE_NM,
		        A.CODE,
		        (select FILE_ORG_NM from TB_EVALU_DESTI_FILE 
		        where ATTH_TYPE = A.CODE
		        AND ROOT_NO = #evaluBusiNo#
		        AND	EVALU_STAGE = #evaluStage#
		        AND	EVALU_STAGE_YEAR = #evaluGubun#) as FILE_ORG_NM,
		        (select REGI_DATE from TB_EVALU_DESTI_FILE 
		        where ATTH_TYPE = A.CODE
		        AND ROOT_NO = #evaluBusiNo#
		        AND	EVALU_STAGE = #evaluStage#
		        AND	EVALU_STAGE_YEAR = #evaluGubun#) as REGI_DATE,
		        (select EVALU_FILE_NO from TB_EVALU_DESTI_FILE 
		        where ATTH_TYPE = A.CODE
		        AND ROOT_NO = #evaluBusiNo#
		        AND	EVALU_STAGE = #evaluStage#
		        AND	EVALU_STAGE_YEAR = #evaluGubun#) as FILE_NO
		FROM 	SYS_CODE A 
		WHERE 	A.CODE in ('AT01', 'AT02', 'AT09', 'AT10')
    </select>
    
    <!-- 첨부파일 조회 -->
    <select id="getEvaluBusiAtthFile" parameterClass="map"  resultClass="hashmap">
    	SELECT  
		        EVALU_FILE_NO,
		        ROOT_NO,
		        ATTH_TYPE,
		        FILE_ORG_NM,
		        REGI_ID,
		        REGI_DATE,
		        EVALU_STAGE,
		        EVALU_STAGE_YEAR
		FROM    TB_EVALU_DESTI_FILE
		WHERE   ROOT_NO = #evaluBusiNo#
		AND     EVALU_STAGE = #evaluStage#
		AND     EVALU_STAGE_YEAR = #evaluGubun#
		<isNotEmpty property="userId">
		AND     REGI_ID = #userId#
		</isNotEmpty>
		AND		ATTH_TYPE = #atthType#
    </select>
    
    <!-- 삭제 대상 첨부파일 조회 -->
    <select id="getDeleteAtthFile" parameterClass="map"  resultClass="hashmap">
    	SELECT  
		        EVALU_FILE_NO,
		        ROOT_NO,
		        ATTH_TYPE,
		        FILE_ORG_NM,
		        FILE_SVR_NM,
		        FILE_PATH,
		        REGI_ID,
		        REGI_DATE,
		        EVALU_STAGE,
		        EVALU_STAGE_YEAR
		FROM    TB_EVALU_DESTI_FILE
		WHERE   EVALU_FILE_NO = #fileNo#
    </select>
    
    <!-- 파일 삭제 -->
    <delete id="deptEvaluAtthFile" parameterClass="map">
    	DELETE FROM TB_EVALU_DESTI_FILE 
    	WHERE  EVALU_FILE_NO = #fileNo#
    </delete>
    
    <!-- 평가정보 평가위원 리스트 -->
    <select id="listEvaluCommitList" parameterClass="map"  resultClass="hashmap">
    	select  EVALU_BUSI_NO,
		        EVALU_STAGE,
		        EVALU_GUBUN,
		        USER_ID,
		        (select USER_NM from TREDSUSER.TB_USER where USER_ID = A.USER_ID) as USER_NM,
		        REVIEW_YN,
		        OPINION_YN,
		        REVIEW_APV_YN,
		        OPINION_APV_YN,
		        OPINION_NOTE,
		        OPINION_NOTE_DATE,
		        IPM_NOTE,
		        IPM_NOTE_DATE,
		        OPINION_FND,
		        (select FILE_ORG_NM from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = #atthType#) as FILE_ORG_NM,
		        (select REGI_DATE from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = #atthType#) as FILE_REGI_DATE,
		        (select EVALU_FILE_NO from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = #atthType#) as FILE_NO
		from 	TB_EVALU_DESTI_BUSI_COMMIT A
		WHERE	A.EVALU_BUSI_NO = #evaluBusiNo#
		AND		A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가진행현황 이용동의 평가위원 리스트 -->
    <select id="listEvaluStageAgreeCommitList" parameterClass="map"  resultClass="hashmap">
    	select  EVALU_BUSI_NO,
		        EVALU_STAGE,
		        EVALU_GUBUN,
		        USER_ID,
		        (select USER_NM from TREDSUSER.TB_USER where USER_ID = A.USER_ID) as USER_NM,
		        AGREE_YN,
		        AGREE_DATE
		from 	TB_EVALU_DESTI_BUSI_COMMIT A
		WHERE	A.EVALU_BUSI_NO = #evaluBusiNo#
		AND		A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가진행현황 서면검토서 평가위원 리스트 -->
    <select id="listEvaluStageReviewCommitList" parameterClass="map"  resultClass="hashmap">
    	select  EVALU_BUSI_NO,
		        EVALU_STAGE,
		        EVALU_GUBUN,
		        USER_ID,
		        (select USER_NM from TREDSUSER.TB_USER where USER_ID = A.USER_ID) as USER_NM,
		        REVIEW_YN,
		        REVIEW_APV_DATE,
		        REVIEW_APV_YN
		from 	TB_EVALU_DESTI_BUSI_COMMIT A
		WHERE	A.EVALU_BUSI_NO = #evaluBusiNo#
		AND		A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가진행현황 평가의견서 평가위원 리스트 -->
    <select id="listEvaluStageOpinionCommitList" parameterClass="map"  resultClass="hashmap">
    	select  EVALU_BUSI_NO,
		        EVALU_STAGE,
		        EVALU_GUBUN,
		        USER_ID,
		        (select USER_NM from TREDSUSER.TB_USER where USER_ID = A.USER_ID) as USER_NM,
		        OPINION_YN,
		        OPINION_APV_DATE,
		        OPINION_APV_YN
		from 	TB_EVALU_DESTI_BUSI_COMMIT A
		WHERE	A.EVALU_BUSI_NO = #evaluBusiNo#
		AND		A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가위원 서면검토서 승인 상태 변경 -->
    <update id="updtEvaluCommitReviewApv" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		REVIEW_APV_YN = #reviewApvYn#,
    			REVIEW_APV_DATE = sysdate
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 평가의견서 승인 상태 변경 -->
    <update id="updtEvaluCommitOpinionApv" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		OPINION_APV_YN = #opinionApvYn#,
    			OPINION_APV_DATE = sysdate
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가단계 종합결과서 제출 상태 변경 -->
    <update id="updtEvaluTotalResult" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		TOTAL_RESULT_YN 	= #totalRYn#,
    			TOTAL_RESULT_DATE 	= sysdate,
    			FINAL_EVALU_FND		= #finalFnd#
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <!-- 평가단계 종합결과서 제출 상태 조회 -->
    <select id="getEvaluTotalResult" parameterClass="map"  resultClass="hashmap">
    	SELECT  
		        TOTAL_RESULT_YN,
		        TOTAL_RESULT_DATE
		FROM    TB_EVALU_DESTI_BUSI_STAGE
		WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </select>
    
    <!-- 평가위원별 평가정보 -->
    <select id="listEvaluCommitInfo" parameterClass="map"  resultClass="hashmap">
    	select  A.EVALU_BUSI_NO,
		        A.EVALU_STAGE,
		        A.EVALU_GUBUN,
		        A.USER_ID,
		        (select USER_NM from TREDSUSER.TB_USER where USER_ID = A.USER_ID) as USER_NM,
		        (select FILE_ORG_NM from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = 'AT11') as REVIEW_FILE_NM,
		        (select EVALU_FILE_NO from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = 'AT11') as REVIEW_FILE_NO,
		        (select FILE_ORG_NM from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = 'AT12') as OPINION_FILE_NM,
		        (select EVALU_FILE_NO from TB_EVALU_DESTI_FILE 
		        where ROOT_NO = A.EVALU_BUSI_NO
		        and EVALU_STAGE = A.EVALU_STAGE
		        and EVALU_STAGE_YEAR = A.EVALU_GUBUN
		        and REGI_ID = A.USER_ID
		        and ATTH_TYPE = 'AT12') as OPINION_FILE_NO
		from 	TB_EVALU_DESTI_BUSI_COMMIT A
		WHERE	A.EVALU_BUSI_NO = #evaluBusiNo#
		AND		A.EVALU_STAGE = #evaluStage#
		AND		A.EVALU_GUBUN = #evaluGubun#	
    </select>
    
    <!-- 평가위원 종합의견 내용 등록  -->
    <update id="regiEvaluOpinionNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		OPINION_NOTE 		= #opinionNote#,
    			OPINION_NOTE_DATE 	= sysdate
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 종합의견 내용 삭제  -->
    <update id="deltEvaluOpinionNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		OPINION_NOTE 		= null,
    			OPINION_NOTE_DATE 	= null
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 개선사항 내용 등록  -->
    <update id="regiEvaluIpmNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		IPM_NOTE 		= #ipmNote#,
    			IPM_NOTE_DATE 	= sysdate
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가위원 개선사항 내용 삭제  -->
    <update id="deltEvaluIpmNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_COMMIT
    	SET		IPM_NOTE 		= null,
    			IPM_NOTE_DATE 	= null
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    	AND		USER_ID = #userId#
    </update>
    
    <!-- 평가단계 종합의견 내용 등록  -->
    <update id="regiEvaluFinalOpinionNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		FINAL_EVALU_FND_NOTE 	= #finalFndNote#
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <!-- 평가단계 종합의견 내용 삭제  -->
    <update id="deltEvaluFinalOpinionNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		FINAL_EVALU_FND_NOTE	= null
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <!-- 평가단계 개선사항 내용 등록  -->
    <update id="regiEvaluFinalIpmNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		FINAL_EVALU_IPM_NOTE 		= #finalIpmNote#
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <!-- 평가단계 개선사항 내용 삭제  -->
    <update id="deltEvaluFinalIpmNote" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		FINAL_EVALU_IPM_NOTE 		= null
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <!-- 평가종료 승인 -->
    <update id="updtEvaluFinalApv" parameterClass="map">
    	UPDATE 	TB_EVALU_DESTI_BUSI_STAGE
    	SET		EVALU_FINAL_YN	= 'Y'
    	WHERE	EVALU_BUSI_NO = #evaluBusiNo#
    	AND		EVALU_STAGE = #evaluStage#
    	AND		EVALU_GUBUN = #evaluGubun#
    </update>
    
    <select id="viewEvaluStgMgmt"  parameterClass="map"  resultClass="hashmap">
    	SELECT
    		EVALU_BUSI_NO as "evaluBusiNo",
    		EVALU_STAGE as "evaluStage",
    		TO_CHAR(EVALU_DATE, 'YYYY-MM-DD') as "evaluDate",
    		EVALU_BEFO_TRGT as "evaluBefoTrgt",
    		EVALU_GUBUN as "evaluGubun",
    		FINAL_EVALU_FND as "finalEvaluFndCd",
    	    DECODE(FINAL_EVALU_FND, 'P', '적합', 'C', '조건부적합', 'F', '부적합') as "finalEvaluFnd",
            FINAL_EVALU_FND_NOTE as "finalEvaluFndNote",
    		(SELECT EVALU_BUSI_NM FROM TB_EVALU_DESTI_BUSI_INFO WHERE EVALU_BUSI_NO = #evaluBusiNo#) as "evaluBusiNm",
			NVL(FND_CNT, 0) as "fndCnt"	   		
    	FROM
    	(
    		SELECT
		        A.*,
		        B.FND_CNT 
		    FROM                    
		        TB_EVALU_DESTI_BUSI_STAGE a LEFT OUTER JOIN (SELECT 
		            EVALU_BUSI_NO,
		            EVALU_STAGE, 
		            COUNT(*) as FND_CNT 
		        FROM 
		            TB_EVALU_FND 
		        GROUP BY EVALU_BUSI_NO, EVALU_STAGE) b
		    ON    
		        a.EVALU_BUSI_NO = b.EVALU_BUSI_NO AND a.EVALU_STAGE = b.EVALU_STAGE
		)
    	WHERE
    		EVALU_BUSI_NO = #evaluBusiNo#
    	AND
    		EVALU_STAGE = #evaluStage#
    	AND
    		EVALU_GUBUN = #evaluGubun#
    </select>
    
    <select id="viewEvaluIndiMgmt"  parameterClass="map"  resultClass="hashmap">
    	SELECT
    		EVALU_STAGE as "evaluStage",
    		EVALU_INDICAT_CD as "evaluIndicatCd"
    	FROM
    		TB_EVALU_DESTI_BUSI_INDICAT
    	WHERE
    		USE_YN = 'Y'	 AND
    		EVALU_BUSI_NO = #evaluBusiNo#	AND
    		EVALU_STAGE = #evaluStage#		
    </select>
    
    <select id="viewEvaluCommMgmt"  parameterClass="map"  resultClass="hashmap">
        SELECT
            A.EVALU_STAGE as "evaluStage",
            A.USER_ID as "userId",
            B.USER_NM as "userNm"
        FROM
            TB_EVALU_DESTI_BUSI_COMMIT A LEFT OUTER JOIN TB_EVALU_COMMIT_INFO B
        ON
            A.USER_ID = B.USER_ID     
        WHERE
        	USE_YN = 'Y' AND
    		EVALU_BUSI_NO = #evaluBusiNo#	AND
    		EVALU_STAGE = #evaluStage#		
    </select>
    
    <select id="mainThisYearStageTotal" parameterClass="map"  resultClass="int">
		SELECT
		        count(*) as "thisYearStageTotalCount" 
		FROM 	TB_EVALU_DESTI_BUSI_STAGE
		WHERE 	EVALU_GUBUN = '2018'
    </select>
    
    <select id="mainThisYearStageFinal" parameterClass="map"  resultClass="int">
		SELECT
		        count(*) as "thisYearStageTotalCount" 
		FROM 	TB_EVALU_DESTI_BUSI_STAGE
		WHERE 	EVALU_GUBUN = '2018'
		AND		EVALU_FINAL_YN = 'Y'
    </select>
    
    
    
</sqlMap>